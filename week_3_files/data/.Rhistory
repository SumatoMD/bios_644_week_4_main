geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 0.5) + # Mean line
facet_wrap(~ Participant) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # Center the title
labs(
title = expression(underline ("Change in Weight for Diet Individual Participants")),
x = "Time (weeks)",
y = "Change from Baseline (kg)")
ggplot(diet_data_wc, aes(x = Week, y = weight_change)) +
geom_line(linewidth = 2) +
geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 0.5) + # Mean line
facet_wrap(~ Participant) +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)) + # Center the title
labs(
title = expression(underline ("Change in Weight for Dieting Individual Participants")),
x = "Time (weeks)",
y = "Change from Baseline (kg)")
ggplot(diet_data_wc, aes(x = Week, y = weight_change, color = (geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 0.5)))) +
geom_line(linewidth = 2) +
geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 0.5) + # Mean line
facet_wrap(~ Participant) +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)) + # Center the title
labs(
title = expression(underline ("Change in Weight for Dieting Individual Participants")),
x = "Time (weeks)",
y = "Change from Baseline (kg)")
ggplot(diet_data_wc, aes(x = Week, y = weight_change,)) +
geom_line(linewidth = 2) +
geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 0.5) + # Mean line
facet_wrap(~ Participant) +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)) + # Center the title
labs(
title = expression(underline ("Change in Weight for Dieting Individual Participants")),
x = "Time (weeks)",
y = "Change from Baseline (kg)")
ggplot(diet_data_wc, aes(x = Week, y = weight_change,)) +
geom_line(linewidth = 2) +
geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 0.5) + # Mean line
facet_wrap(~ Participant) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # Center the title
labs(
title = expression(underline ("Change in Weight for Dieting Individual Participants")),
x = "Time (weeks)",
y = "Change from Baseline (kg)")
ggplot(diet_data_wc, aes(x = Week, y = weight_change,)) +
geom_line(linewidth = 2) +
geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 0.5) + # Mean line
facet_wrap(~ Participant) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # Center the title
labs(
title = expression(underline ("Change in Weight for Individual Dieting Participants")),
x = "Time (weeks)",
y = "Change from Baseline (kg)")
# Create a plot with the participant data, relative to change in weight
diet_weight_change_hs <- ggplot(
diet_data_wc, aes(x = Week, y = weight_change, group = Participant)) +
geom_line(alpha = 0.5, color = "black") + # Participant lines
geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 1.2) + # Mean line
geom_point(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", size = 2) + # Mean point
labs(
title = "Change in Weight for Diet Participants",
x = "Time (weeks)",
y = "Change from Baseline (kg)") +
geom_hline(yintercept = 0, linetype = "dashed", color = "blue") + # Baseline reference line
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) # Center the title
# Create a plot with the participant data, relative to change in weight
diet_weight_change_hs <- ggplot(
diet_data_wc, aes(x = Week, y = weight_change, group = Participant)) +
geom_line(alpha = 0.5, color = "black") + # Participant lines
geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 1.2) + # Mean line
geom_point(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", size = 2) + # Mean point
labs(
title = "Change in Weight for Diet Participants",
x = "Time (weeks)",
y = "Change from Baseline (kg)") +
geom_hline(yintercept = 0, linetype = "dashed", color = "blue") + # Baseline reference line
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) # Center the title
diet_weight_change_hs # Run the labelled code to make sure it works
# Create a plot with the participant data, relative to change in weight
diet_weight_change_hs <- ggplot(
diet_data_wc, aes(x = Week, y = weight_change, group = Participant)) +
geom_line(alpha = 0.5, color = "black") + # Participant lines
geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 1.2) + # Mean line
geom_point(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", size = 2) + # Mean point
labs(
title = "Change in Weight for Diet Participants",
x = "Time (weeks)",
y = "Change from Baseline (kg)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) # Center the title
diet_weight_change_hs # Run the labelled code to make sure it works
nhanes_bp_mean <- nhanes_clean %>%
mutate(
mean_sbp = mean(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4)
)
nhanes_bp_mean <- nhanes_clean %>%
mutate(
mean_sbp = mean(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4)
)
nhanes_bp_mean <- nhanes_clean %>%
mutate(
mean_sbp = mean(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), na.rm = TRI)
nhanes_bp_mean <- nhanes_clean %>%
mutate(
mean_sbp = mean(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), na.rm = TRUE)
nhanes_bp_mean <- nhanes_clean %>%
rowwise() %>%
mutate(
mean_sbp = mean(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), na.rm = TRUE)
nhanes_bp_mean <- nhanes_clean %>%
rowwise() %>%
mutate(
mean_sbp = mean(c_across(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), na.rm = TRUE))
nhanes_bp_mean
nhanes_bp_mean
nhanes_bp_mean <- nhanes_clean %>%
rowwise() %>%
mutate(
mean_sbp = mean(c_across(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), na.rm = TRUE))
nhanes_bp_mean <- nhanes_clean %>%
nhanes_bp_mean <- nhanes_clean %>%
rowwise() %>%
mutate(
mean_sbp = mean(c_across(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), na.rm = TRUE))
)
nhanes_bp_mean <- nhanes_clean %>%
rowwise() %>%
mutate(
mean_sbp = mean(c_across(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), na.rm = TRUE))
nhanes_bp_mean <- nhanes_clean %>%
rowwise() %>%
mutate(
mean_sbp = mean(c_across(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), na.rm = TRUE))
nhanes_bp_mean <- nhanes_clean %>%
rowwise() %>%
mutate(
mean_sbp = mean(c_across(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4)), na.rm = TRUE))
print(nhanes_bp_mean)
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter(!if_any(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), is.na))
print(df_filtered_by_specific)
print(nhanes_bp_mean_clean)
View(nhanes_bp_mean_clean)
View(nhanes_bp_mean_clean)
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter(!if_any(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), is.NA))
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter(!if_any(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4)))
View(nhanes_bp_mean_clean)
View(nhanes_bp_mean_clean)
?filter
?filter
?filter()
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter((c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), preserve = TRUE))
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter((c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4) preserve = TRUE))
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4) preserve = TRUE)
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
drop_na(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4)
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter(!if_any(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), is.na))
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter(!if_any(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4), is.na))
View(nhanes_bp_mean_clean)
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter(!if_any(c(age, gender, mean_sbp), is.na))
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter(!if_any(c(age, gender, mean_sbp), is.na))
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
drop_na(c(age, gender, mean_sbp)
nhanes_bp_categories <- nhanes_bp_mean_clean %>%
nhanes_bp_categories <- nhanes_bp_mean_clean %>%
mutate(
blood_pressure_category = case_when(
mean_sbp < 120 ~ "Normal",
mean_sbp >= 120 & mean_sbp < 129 ~ "Elevated",
mean_sbp >= 130 & mean_sbp <= 139 ~ "Stage 1 Hypertension",
mean_sbp > 140 ~ "Stage 2 Hypertension",
TRUE ~ NA_character_ # Default for any uncategorized cases
)
nhanes_bp_categories <- nhanes_bp_mean_clean %>%
nhanes_bp_categories <- nhanes_bp_mean_clean %>%
mutate(
blood_pressure_category = case_when(
mean_sbp < 120 ~ "Normal",
mean_sbp >= 120 & mean_sbp < 129 ~ "Elevated",
mean_sbp >= 130 & mean_sbp <= 139 ~ "Stage 1 Hypertension",
mean_sbp > 140 ~ "Stage 2 Hypertension",
TRUE ~ NA_character_
)
nhanes_bp_categories <- nhanes_bp_mean_clean %>%
nhanes_bp_categories <- nhanes_bp_mean_clean %>%
mutate(
blood_pressure_category = case_when(
mean_sbp < 120 ~ "Normal",
mean_sbp >= 120 & mean_sbp < 129 ~ "Elevated",
mean_sbp >= 130 & mean_sbp <= 139 ~ "Stage 1 Hypertension",
mean_sbp > 140 ~ "Stage 2 Hypertension",
TRUE ~ NA_character_))
View(nhanes_bp_categories)
print(nhanes_bp_categories)
diet_data_wc <- diet_adults %>%        # Create a new data set with delta-weight
mutate(
baseline_weight = first(Weight[Week == 0]), # The capital W was a key issue with troubleshooting
weight_change = Weight - baseline_weight
)
## Step 1: Generate a column with mean systolic blood pressure ##
nhanes_bp_mean <- nhanes_adults %>%
rowwise() %>%
mutate(
mean_sbp = mean(c_across(c(systolic_bp_1, systolic_bp_2, systolic_bp_3, systolic_bp_4)), na.rm = TRUE))
# Using Filter, I kept having no data points left in my data.set. So I tried a different function.
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter(!if_any(c(age, gender, mean_sbp), is.na))
# Using Filter, I kept having no data points left in my data.set. So I tried a different function.
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
filter(!if_any(c(age, gender, mean_sbp), is.na))
# Using the drop_na() I was able to get the goal functioning.
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
drop_na(c(age, gender, mean_sbp)
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
View(nhanes_p_4)
nhanes_p_4
nhanes_p_4_cleaned <- ggplot(nhanes_bp_categories, aes(x = ethnicity_2, y = age, fill = gender)) +
geom_boxplot() +
labs(
title = "Distribution of Participant Age as a Function of Ethnicity (+Asian) - Completed Entries",
x = "Reported Ethnicity",
y = "Age (years)",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(nhanes_bp_clean, aes(x = age_cat, y = mean_sbp, fill = fct_rev(gender))) + #Matches gender orientation of Exercise 1
heatmap() +
labs( #Re-labels axes
title = "Age Distribution of Adult NHANES Participants from 2013-2018",
x = "Age (years)",
y = "Participants (#)",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5)) #Centers the chart title
ggplot(nhanes_bp_categories, aes(x = age_cat, y = mean_sbp, fill = fct_rev(gender))) + #Matches gender orientation of Exercise 1
heatmap() +
labs( #Re-labels axes
title = "Age Distribution of Adult NHANES Participants from 2013-2018",
x = "Age (years)",
y = "Participants (#)",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5)) #Centers the chart title
ggplot(nhanes_bp_categories, aes(x = age_cat, y = mean_sbp, fill = gender)) +
geom_tile(color = "white") + # Add white borders to the tiles
geom_text(aes(label = round(value, 1)), color = "black", size = 3) +
scale_fill_gradient(low = "yellow", high = "red") +
theme_minimal() +
labs(title = "Heatmap of mtcars data",
x = "Variable",
y = "Car Model",
fill = "Value") +
coord_fixed()
ggplot(nhanes_bp_categories, aes(x = age_cat, y = mean_sbp, fill = gender)) +
geom_tile(color = "white") + # Add white borders to the tiles
geom_text(aes(label = round(gender, 1)), color = "black", size = 3) +
scale_fill_gradient(low = "yellow", high = "red") +
theme_minimal() +
labs(title = "Heatmap of mtcars data",
x = "Variable",
y = "Car Model",
fill = "Value") +
coord_fixed()
ggplot(nhanes_bp_categories, aes(x = age_cat, y = mean_sbp, fill = gender)) +
geom_tile(color = "white") + # Add white borders to the tiles
geom_text(aes(label = round(age_cat, 1)), color = "black", size = 3) +
scale_fill_gradient(low = "yellow", high = "red") +
theme_minimal() +
labs(title = "Heatmap of mtcars data",
x = "Variable",
y = "Car Model",
fill = "Value") +
coord_fixed()
ggplot(nhanes_bp_categories, aes(x = gender, fill = blood_pressure_category)) +
geom_bar(position = "fill") + #Provides the relative ratio scale
labs( #Re-label axes
title = "Relative  Blood Pressure Characterization between Genders in Adult NHANES Participants",
x = "Gender",
y = "Relative Distribution",
fill = "Blood Pressure Category") +
theme(plot.title = element_text(hjust = 0.5)) #Centers the chart title
# Blood Pressure Categories correlated with Age
ggplot(nhanes_bp_categories, aes(x = age_cat, fill = blood_pressure_category)) +
geom_bar(position = "dodge") + #Provides the relative ratio scale
labs( #Re-label axes
title = "Blood Pressure Characterization Among Age Groups in Adult NHANES Participants",
x = "Age (years)",
y = "Individuals",
fill = "Blood Pressure Category") +
theme(plot.title = element_text(hjust = 0.5)) #Centers the chart title
nhanes_bp_mean_clean <- nhanes_bp_mean %>%
drop_na(c(age, gender, mean_sbp)
nhanes_bp_categories <- nhanes_bp_mean_clean %>%
nhanes_bp_categories <- nhanes_bp_mean_clean %>%
mutate(
blood_pressure_category = case_when(
mean_sbp < 120 ~ "Normal",
mean_sbp >= 120 & mean_sbp < 129 ~ "Elevated",
mean_sbp >= 130 & mean_sbp <= 139 ~ "Stage 1 Hypertension",
mean_sbp > 140 ~ "Stage 2 Hypertension",
TRUE ~ NA_character_))
nhanes_p_4_cleaned <- ggplot(nhanes_bp_categories, aes(x = ethnicity_2, y = age, fill = gender)) +
geom_boxplot() +
labs(
title = "Distribution of Participant Age as a Function of Ethnicity (+Asian) - Completed Entries",
x = "Reported Ethnicity",
y = "Age (years)",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(nhanes_bp_categories, aes(x = gender, fill = blood_pressure_category)) +
geom_bar(position = "fill") + #Provides the relative ratio scale
labs( #Re-label axes
title = "Relative  Blood Pressure Characterization between Genders in Adult NHANES Participants",
x = "Gender",
y = "Relative Distribution",
fill = "Blood Pressure Category") +
theme(plot.title = element_text(hjust = 0.5)) #Centers the chart title
# Blood Pressure Categories correlated with Age
ggplot(nhanes_bp_categories, aes(x = age_cat, fill = blood_pressure_category)) +
geom_bar(position = "dodge") + #Provides the relative ratio scale
labs( #Re-label axes
title = "Blood Pressure Characterization Among Age Groups in Adult NHANES Participants",
x = "Age (years)",
y = "Individuals",
fill = "Blood Pressure Category") +
theme(plot.title = element_text(hjust = 0.5)) #Centers the chart title
nhanes_p_5_gender_bp <- ggplot(nhanes_bp_categories, aes(x = gender, fill = blood_pressure_category)) +
geom_bar(position = "fill") + #Provides the relative ratio scale
labs( #Re-label axes
title = "Relative  Blood Pressure Characterization between Genders in Adult NHANES Participants",
x = "Gender",
y = "Relative Distribution",
fill = "Blood Pressure Category") +
theme(plot.title = element_text(hjust = 0.5)) #Centers the chart title
nhanes_p_6_age_bp <- ggplot(nhanes_bp_categories, aes(x = age_cat, fill = blood_pressure_category)) +
geom_bar(position = "dodge") + #Provides the relative ratio scale
labs( #Re-label axes
title = "Blood Pressure Characterization Among Age Groups in Adult NHANES Participants",
x = "Age (years)",
y = "Individuals",
fill = "Blood Pressure Category") +
theme(plot.title = element_text(hjust = 0.5)) #Centers the chart title
nhanes_p_5_gender_bp
nhanes_p_6_age_bp
# Combine the plots into a single figure
ggarrange(
nhanes_p_4, # Age distribution vs. Ethnicity (A+) before removing incomplete entries
nhanes_p_4_cleaned, # Age distribution vs. Ethnicity (A+) after removing incomplete entries
nhanes_p_5_gender_bp # BP Characterisations in Men vs. Women
nhanes_p_6_age_bp) # Bp Characterisations accross agre brackts
ggarrange(
nhanes_p_4, # Age distribution vs. Ethnicity (A+) before removing incomplete entries
nhanes_p_4_cleaned, # Age distribution vs. Ethnicity (A+) after removing incomplete entries
nhanes_p_5_gender_bp, # BP Characterizations in Men vs. Women
nhanes_p_6_age_bp, # Bp Characterizations across age brackets
nrow = 2, ncol = 2, #Specifies the arrangement
common.legend = TRUE, legend = "top" #consolidates, and relocates the legend
)
ggarrange(
nhanes_p_4, # Age distribution vs. Ethnicity (A+) before removing incomplete entries
nhanes_p_4_cleaned, # Age distribution vs. Ethnicity (A+) after removing incomplete entries
nhanes_p_5_gender_bp, # BP Characterizations in Men vs. Women
nhanes_p_6_age_bp, # Bp Characterizations across age brackets
nrow = 4, ncol = 1, #Specifies the arrangement
common.legend = TRUE, legend = "top" #consolidates, and relocates the legend
)
ggarrange(
nhanes_p_4, # Age distribution vs. Ethnicity (A+) before removing incomplete entries
nhanes_p_4_cleaned, # Age distribution vs. Ethnicity (A+) after removing incomplete entries
nrow = 4, ncol = 1, #Specifies the arrangement
common.legend = TRUE, legend = "top" #consolidates, and relocates the legend
)
ggarrange(
nhanes_p_4, # Age distribution vs. Ethnicity (A+) before removing incomplete entries
nhanes_p_4_cleaned, # Age distribution vs. Ethnicity (A+) after removing incomplete entries
nrow = 1, ncol = 2, #Specifies the arrangement
common.legend = TRUE, legend = "top" #consolidates, and relocates the legend
)
ggarrange(
nhanes_p_4, # Age distribution vs. Ethnicity (A+) before removing incomplete entries
nhanes_p_4_cleaned, # Age distribution vs. Ethnicity (A+) after removing incomplete entries
nrow = 2, ncol = 1, #Specifies the arrangement
common.legend = TRUE, legend = "top" #consolidates, and relocates the legend
)
ggarrange(
nhanes_p_5_gender_bp, # BP Characterizations in Men vs. Women
nhanes_p_6_age_bp, # Bp Characterizations across age brackets
nrow = 1, ncol = 2, #Specifies the arrangement
common.legend = TRUE, legend = "top" #consolidates, and relocates the legend
)
ggarrange(
nhanes_p_5_gender_bp, # BP Characterizations in Men vs. Women
nhanes_p_6_age_bp, # Bp Characterizations across age brackets
nrow = 2, ncol = 1, #Specifies the arrangement
common.legend = TRUE, legend = "top" #consolidates, and relocates the legend
)
library(pacman)
p_load(here)
p_load(rio)
p_load(skimr)
p_load(janitor)
p_load(tidyverse)
p_load(dplyr)
p_load(rmarkdown)
p_load(tinytex)
p_load(ggplot2)
p_load(cowplot)
p_load(ggpubr)
p_load(RColorBrewer)
p_load(forcats)
update.packages(ask = FALSE, checkBuilt = TRUE)
library(pacman)
p_load(here)
p_load(rio)
p_load(skimr)
p_load(janitor)
p_load(tidyverse)
p_load(dplyr)
p_load(rmarkdown)
p_load(tinytex)
p_load(ggplot2)
p_load(cowplot)
p_load(ggpubr)
p_load(RColorBrewer)
p_load(forcats)
p_load(BibTeX)
p_install((BibTeX))
library(pacman)
p_load(here)
p_load(rio)
p_load(skimr)
p_load(janitor)
p_load(tidyverse)
p_load(dplyr)
p_load(rmarkdown)
p_load(tinytex)
p_load(ggplot2)
p_load(cowplot)
p_load(ggpubr)
p_load(RColorBrewer)
p_load(forcats)
p_load(BibTeX)
p_install(BibTeX)
(BibTeX)
p_load(BibTeX)
library(pacman)
p_load(here)
p_load(rio)
p_load(skimr)
p_load(janitor)
p_load(tidyverse)
p_load(dplyr)
p_load(rmarkdown)
p_load(tinytex)
p_load(ggplot2)
p_load(cowplot)
p_load(ggpubr)
p_load(RColorBrewer)
p_load(forcats)
nhanes_clean <- import(here("w3", "data", "cleaned_NHANES.csv"))
nhanes_clean <- import(here("w4", "New folder", "bios_644_week_4", "week_3_files", "data", "cleaned_NHANES.csv"))
setwd("~/BIOS640/w4/New folder")
nhanes_clean <- import(here("w4", "New folder", "bios_644_week_4", "week_3_files", "data", "cleaned_NHANES.csv"))
nhanes_clean <- import(here("w4", "New folder", "bios_644_week_4", "week_3_files", "data", "cleaned_NHANES.csv"))
setwd("~/BIOS640/w4/New folder/bios_644_week_4/week_3_files/data")
nhanes_clean <- import(here("w4", "New folder", "bios_644_week_4", "week_3_files", "data", "cleaned_NHANES.csv"))
nhanes_clean <- import(here("w4", "New folder", "bios_644_week_4", "week_3_files", "data", "cleaned_NHANES.csv"))
setwd("~/BIOS640/w4/New folder/bios_644_week_4/week_3_files/data")
p_load(here)
nhanes_clean <- import(here("data", "cleaned_NHANES.csv"))
nhanes_clean <- import(here("cleaned_NHANES.csv"))
## NHANES Data - Cleaned by Instructor ##
nhanes_clean <- import(here("bios_644_week_4", "week_3_files", "data", "cleaned_NHANES.csv"))
## NHANES Data - Cleaned by Instructor ##
nhanes_clean <- import(here("week_3_files", "data", "cleaned_NHANES.csv"))
cleaned_NHANES <- read.csv("~/BIOS640/w4/New folder/bios_644_week_4/week_3_files/data/cleaned_NHANES.csv", header=FALSE)
View(cleaned_NHANES)
diet <- read.csv("~/BIOS640/w4/New folder/bios_644_week_4/week_3_files/data/diet.csv")
View(diet)
setwd("~/BIOS640/w4/New folder/bios_644_week_4/week_3_files/data")
