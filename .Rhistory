knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE,
fig.align = 'center',  # Formatting for all Figures
out.width = "90%")
### Package Loading ###
library(pacman)
p_load(here)
p_load(readr)
p_load(rio)
p_load(skimr)
p_load(janitor)
p_load(tidyverse)
p_load(dplyr)
p_load(rmarkdown)
p_load(tinytex)
p_load(ggplot2)
p_load(cowplot)
p_load(ggpubr)
p_load(RColorBrewer)
p_load(forcats)
p_load(dtplyr)
p_load(DT)
### Data Set Import ###
## NHANES Data - Cleaned by Instructor ##
nhanes_clean <- import(here("week_3_files", "data", "cleaned_NHANES.csv"))
## Dietary Data ##
diet_raw <- import(here("week_3_files", "data", "diet.csv"))
knitr::opts_chunk$set(echo = FALSE)
nhanes_adults <- nhanes_clean %>% # Isolate data that contains only adults
filter(age >= 20 & age <= 80)
# Distribution of Adult Participants Ages
ggplot(nhanes_adults, aes(x = age, fill = fct_rev(gender))) + # Matches gender orientation of Exercise 1
geom_histogram(binwidth = 5, position = "dodge") + # Groups Male/Female side by side
labs( # Re-labels axes
title = expression(underline("Age Distribution of Adult NHANES Participants from 2013-2018")),
x = "Age (years)",
y = "Participants (#)",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5)) # Centers the chart title
ggsave( #Saving the generated plot
"nhanes_age_dist.png",
path = here("BIOS640", "w3"),
width = 8, height = 6)
### Distribution of Participant Reported Ethnicity #
ggplot(nhanes_adults, aes(x = ethnicity_2, fill = fct_rev(gender))) + # Matches gender orientation of Exercise 1
geom_bar(position = "fill") + #Provides the relative ratio scale
labs( # Re-label axes
title = "Relative Gender Distribution of Ethnicities in Adult NHANES Participants",
x = "Reported Ethnicity",
y = "Relative Distribution",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5)) # Centers the chart title
ggsave( # Saving the generated plot
"nhanes_ethn2_dist.png",
path = here("BIOS640", "w3"),
width = 8, height = 6)
### Distribution of Ethnicity-1 as a function of Age #
ggplot(nhanes_clean, aes(x = ethnicity_1, y = age, fill = gender)) + # Matches gender orientation of Exercise 1
geom_boxplot() + #Provides the relative ratio scale
labs( # Re-label axes
title = "Distribution of Participant Age as a Function of Ethnicity (-Asian)",
x = "Reported Ethnicity",
y = "Age (years)",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5)) #Centers the chart title
### Distribution of Ethnicity-1 as a function of Age #
ggplot(nhanes_clean, aes(x = ethnicity_2, y = age, fill = gender)) + #Matches gender orientation of Exercise 1
geom_boxplot() + #Provides the relative ratio scale
labs( #Re-label axes
title = "Distribution of Participant Age as a Function of Ethnicity (+Asian)",
x = "Reported Ethnicity",
y = "Age (years)",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5)) #Centers the chart title
#Turn our plots into objects to be referenced in code
nhanes_p_1 <- ggplot(nhanes_adults, aes(x = age, fill = fct_rev(gender))) + # Matches gender orientation of Exercise 1
geom_histogram(binwidth = 5, position = "dodge") + # Groups Male/Female side by side
labs( #Re-labels axes
title = "Age Distribution of Adult NHANES Participants from 2013-2018",
x = "Age (years)",
y = "Participants (#)",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5)) # Centers the chart title
nhanes_p_2 <-ggplot(nhanes_adults, aes(x = ethnicity_2, fill = fct_rev(gender))) + # Matches gender orientation of Exercise 1
geom_bar(position = "fill") + # Provides the relative ratio scale
labs( # Re-label axes
title = "Relative Gender Distribution of Ethnicities in Adult NHANES Participants",
x = "Reported Ethnicity",
y = "Relative Distribution",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5)) # Centers the chart title
ggarrange(
nhanes_p_1, nhanes_p_2, nrow = 2, ncol = 1, # Specifies the arrangement
common.legend = TRUE, legend = "top" # consolidates, and relocates the legend
)
ggsave( #Saving the generated plot
"nhanes_combo_age_and_rel_ethn.png",
path = here("BIOS640", "w3"),
width = 8, height = 6)
## Combining Plots 3 and 4 ##
#Turn our plots into objects to be referenced in code
nhanes_p_3 <- ggplot(nhanes_clean, aes(x = ethnicity_1, y = age, fill = gender)) +
geom_boxplot() + # Same operations as previous section
labs(
title = "Distribution of Participant Age as a Function of Ethnicity (-Asian)",
x = "Reported Ethnicity",
y = "Age (years)",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5))
ggsave( # Saving the generated plot
"nhanes_ethnicity_no_asian.png",
path = here("BIOS640", "w3"),
width = 8, height = 6
)
nhanes_p_4 <- ggplot(nhanes_clean, aes(x = ethnicity_2, y = age, fill = gender)) +
geom_boxplot() +
labs(
title = "Distribution of Participant Age as a Function of Ethnicity (+Asian)",
x = "Reported Ethnicity",
y = "Age (years)",
fill = "Gender") +
theme(plot.title = element_text(hjust = 0.5))
ggsave(# Saving the generated plot
"nhanes_ethnicity_yes_asian.png",
path = here("BIOS640", "w3"),
width = 8, height = 6
)
# Combine and Organize Plots 1 and 2
ggarrange(
nhanes_p_3, nhanes_p_4, nrow = 2, ncol = 1, # Specifies the arrangement
common.legend = TRUE, legend = "top" # consolidates, and relocates the legend
)
ggsave(#Saving the generated plot    # saves the graph for future use
"nhanes_ethnicity_comparison.png",
path = here("BIOS640", "w3"),
width = 8, height = 6
)
datatable(
nhanes_bp_1mean_clean,
options = list(scrollx = TRUE)
)
datatable(
nhanes_bp_mean_clean,
options = list(scrollx = TRUE)
)
datatable(
nhanes_adults,
options = list(scrollx = TRUE)
)
datatable(
nhanes_adults,
options = list(scrollx = TRUE)
)
knitr::include_graphics(here("week_3_files", "figure images", "nhanes_ethnicity_comparison.png"))
knitr::include_graphics(here("week_3_files", "figure images", "diet_individual_trends.png"))
knitr::include_graphics(here("week_3_files", "figure images", "nhanes_age_ethnicity_cleaned.png"))
knitr::include_graphics(here("week_3_files", "figure images", "nhanes_bp_category_gender.png"))
knitr::include_graphics(here("week_3_files", "figure images", "combo_BP_gender_age.png"))
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
fig.align = 'center',  # Formatting for all Figures
out.width = "90%")
### Package Loading ###
library(pacman)
p_load(here)
p_load(readr)
p_load(rio)
p_load(skimr)
p_load(janitor)
p_load(tidyverse)
p_load(dplyr)
p_load(rmarkdown)
p_load(tinytex)
p_load(ggplot2)
p_load(cowplot)
p_load(ggpubr)
p_load(RColorBrewer)
p_load(forcats)
p_load(dtplyr)
p_load(DT)
### Data Set Import ###
## NHANES Data - Cleaned by Instructor ##
nhanes_clean <- import(here("week_3_files", "data", "cleaned_NHANES.csv"))
## Dietary Data ##
diet_raw <- import(here("week_3_files", "data", "diet.csv"))
row_count(nhanes_clean)
nrow(nhanes_clean)
nrow(nhanes_adults)
male_count_clean <- nhanes_clean %>%
filter(gender == "Male") %>%
nrow()
male_count_clean
male_count_clean - male_count_adult
male_count_clean <- nhanes_clean %>%
filter(gender == "Male") %>%
nrow()
male_count_clean
male_count_adult <- nhanes_adult %>%
filter(gender == "Male") %>%
nrow()
# Males
male_count_clean <- nhanes_clean %>%
filter(gender == "Male") %>%
nrow()
male_count_clean
male_count_adults <- nhanes_adults %>%
filter(gender == "Male") %>%
nrow()
male_count_adults
#Difference
male_count_clean - male_count_adults
# Females
female_count_clean <- nhanes_clean %>%
filter(gender == "Male") %>%
nrow()
female_count_clean
female_count_adults <- nhanes_adults %>%
filter(gender == "Male") %>%
nrow()
female_count_adults
#Difference
female_count_clean - female_count_adults
asian_count_eth_1 <- nhanes_clean %>%
filter(ethnicity_1 == "Asian") %>%
nrow()
asian_count_eth_1
asian_count_eth_2 <- nhanes_adults %>%
filter(ethnicity_2 == "Asian") %>%
nrow()
asian_count_eth_2
#Difference
asian_count_eth_1 - asian_count_eth_2
nrow(nhanes_clean) # Total number of participants
asian_count_eth_2 <- nhanes_clean %>%
filter(ethnicity_2 == "Asian") %>%
nrow()
asian_count_eth_2
nrow(nhanes_clean) # Total number of participants
(asian_count_eth_2/total_n_cleans * 100)
total_n_cleans <- nrow(nhanes_clean) # Total number of participants
# Number of Participants Identifying as Asian
asian_count_eth_2 <- nhanes_clean %>%
filter(ethnicity_2 == "Asian") %>%
nrow()
asian_count_eth_2
# Percentage of Participants Identifying as Asian
(asian_count_eth_2/total_n_cleans * 100)
# Characterizing Gender after selecting for Adults
total_n_cleans <- nrow(nhanes_clean) # Total number of participants
# Number of Participants Identifying as Asian
asian_count_eth_2 <- nhanes_clean %>%
filter(ethnicity_2 == "Asian") %>%
nrow()
asian_count_eth_2
# Percentage of Participants Identifying as Asian
(asian_count_eth_2/total_n_cleans * 100)
# Characterizing Gender after selecting for Adults
total_n_cleans <- nrow(nhanes_clean) # Total number of participants
# Number of Participants Identifying as Asian
asian_count_eth_2 <- nhanes_clean %>%
filter(ethnicity_2 == "Asian") %>%
nrow()
asian_count_eth_2
# Percentage of Participants Identifying as Asian
(asian_count_eth_2/total_n_cleans * 100)
# Result is 11.2 %
# Characterizing Gender after selecting for Adults
total_n_cleans <- nrow(nhanes_clean) # Total number of participants
# Number of Participants Identifying as Asian
asian_count_eth_2 <- nhanes_clean %>%
filter(ethnicity_2 == "Asian") %>%
nrow()
asian_count_eth_2
# Percentage of Participants Identifying as Asian
(asian_count_eth_2/total_n_cleans * 100)
# Result is 11.2 %
# Characterizing Gender after selecting for Adults
total_n_cleans <- nrow(nhanes_clean) # Total number of participants
# Number of Participants Identifying as Asian
asian_count_eth_2 <- nhanes_clean %>%
filter(ethnicity_2 == "Asian") %>%
nrow()
asian_count_eth_2
# Percentage of Participants Identifying as Asian
(asian_count_eth_2/total_n_cleans * 100)
# Characterizing Gender after selecting for Adults
total_n_cleans <- nrow(nhanes_clean) # Total number of participants
# Number of Participants Identifying as Asian
asian_count_eth_2 <- nhanes_clean %>%
filter(ethnicity_2 == "Asian") %>%
nrow()
asian_count_eth_2
# Percentage of Participants Identifying as Asian
(asian_count_eth_2/total_n_cleans * 100)
# Characterizing Gender after selecting for Adults
nrow(nhanes_clean) # Total number of participants
nrow(nhanes_adults) # Number of adult participants
nrow(nhanes_clean) - nrow(nhanes_adults) #Number of participants dropped with age selection
# Change in Gender Distribution
# Males
male_count_clean <- nhanes_clean %>%
filter(gender == "Male") %>%
nrow()
male_count_clean
male_count_adults <- nhanes_adults %>%
filter(gender == "Male") %>%
nrow()
male_count_adults
#Difference
male_count_clean - male_count_adults
# Females
female_count_clean <- nhanes_clean %>%
filter(gender == "Male") %>%
nrow()
female_count_clean
female_count_adults <- nhanes_adults %>%
filter(gender == "Male") %>%
nrow()
female_count_adults
#Difference
female_count_clean - female_count_adults
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE)
## Diet Data Analysis ##
# Create a new variable; weight_change #
diet_data_wc <- diet_raw %>%        # Create a new data set with delta-weight
group_by(Participant) %>%
mutate(
baseline_weight = Weight[Week == 0], # The capital W was a key issue with troubleshooting
weight_change = Weight - baseline_weight
) %>%
ungroup()
# Determine the overall trend of weight change #
# We need to make sure we use the weight change, not the original raw
# trends, so the curve doesn't start too high or too low from the individual curve
mean_weight_change <- diet_data_wc %>%
group_by(Week) %>%
summarise(mean_change = mean(weight_change))
# Create a plot with the participant data, relative to change in weight
diet_weight_change_hs <- ggplot(
diet_data_wc, aes(x = Week, y = weight_change, group = Participant)) +
geom_line(aes(color = "Individual"), alpha = 0.7) + # Participant lines
geom_line(data = mean_weight_change,
aes(x = Week, y = mean_change, color = "Population mean"),
linewidth = 1.1) + # Mean line
geom_line(data = mean_weight_change,
aes(x = Week, y = mean_change, color = "Population mean"),
linewidth = 1.2) +
facet_wrap(~ Participant) +
scale_color_manual(values = c("Individual" = "black", "Population mean" = "red")) +
labs(
title = "Change in Weight for Diet Participants",
x = "Time (weeks)",
y = "Change from Baseline (kg)",
color = "") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) # Center the title
# Split the consolidated data into 20 separate mini charts, so participants
# can be evaluated as individuals, relative to the overall trend (RED)
#and their initial weight.
ggplot(diet_data_wc, aes(x = Week, y = weight_change,)) +
geom_line(linewidth = 2) +
geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 0.5) + # Mean line
facet_wrap(~ Participant) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # Center the title
labs(
title = expression(underline ("Change in Weight for Individual Dieting Participants")),
x = "Time (weeks)",
y = "Change from Baseline (kg)")
ggsave( #Saving the generated plot
"diet_individual_trends.png",
path = here("BIOS640", "w3"),
width = 8, height = 6)
# Given the nature of the data, I actively did not change the freedom of the axes.
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE)
## Diet Data Analysis ##
# Create a new variable; weight_change #
diet_data_wc <- diet_raw %>%        # Create a new data set with delta-weight
group_by(Participant) %>%
mutate(
baseline_weight = Weight[Week == 0], # The capital W was a key issue with troubleshooting
weight_change = Weight - baseline_weight
) %>%
ungroup()
# Determine the overall trend of weight change #
# We need to make sure we use the weight change, not the original raw
# trends, so the curve doesn't start too high or too low from the individual curve
mean_weight_change <- diet_data_wc %>%
group_by(Week) %>%
summarise(mean_change = mean(weight_change))
# Create a plot with the participant data, relative to change in weight
diet_weight_change_hs <- ggplot(
diet_data_wc, aes(x = Week, y = weight_change, group = Participant)) +
geom_line(aes(color = "Individual"), alpha = 0.7) + # Participant lines
geom_line(data = mean_weight_change,
aes(x = Week, y = mean_change, color = "Population mean"),
linewidth = 1.1) + # Mean line
geom_line(data = mean_weight_change,
aes(x = Week, y = mean_change, color = "Population mean"),
linewidth = 1.2) +
facet_wrap(~ Participant) +
scale_color_manual(values = c("Individual" = "black", "Population mean" = "red")) +
labs(
title = "Change in Weight for Diet Participants",
x = "Time (weeks)",
y = "Change from Baseline (kg)",
color = "") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) # Center the title
# Split the consolidated data into 20 separate mini charts, so participants
# can be evaluated as individuals, relative to the overall trend (RED)
#and their initial weight.
ggplot(diet_data_wc, aes(x = Week, y = weight_change,)) +
geom_line(linewidth = 2) +
geom_line(data = mean_weight_change, aes(y = mean_change, group = 1),
color = "red", linewidth = 0.5) + # Mean line
facet_wrap(~ Participant) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # Center the title
labs(
title = expression(underline ("Change in Weight for Individual Dieting Participants")),
x = "Time (weeks)",
y = "Change from Baseline (kg)")
ggsave( #Saving the generated plot
"diet_individual_trends.png",
path = here("BIOS640", "w3"),
width = 8, height = 6)
# Given the nature of the data, I actively did not change the freedom of the axes.
